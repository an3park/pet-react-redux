{"version":3,"sources":["theme.ts","components/user/userStyles.ts","components/user/UserItem.tsx","components/user/AddUserButton.tsx","components/user/UserModal.tsx","store/usersActions.ts","App.tsx","store/usersReducer.ts","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["theme","createMuiTheme","overrides","MuiCssBaseline","boxSizing","body","paddingTop","palette","text","secondary","grey","useStyles","makeStyles","createStyles","root","display","alignItems","width","spacing","height","paddingRight","position","counter","justifyContent","alignSelf","flexBasis","flexShrink","backgroundColor","background","default","padding","avatarWrapper","margin","avatar","deepPurple","color","getContrastText","names","overflow","minWidth","email","whiteSpace","textOverflow","adduser","borderWidth","borderStyle","borderColor","cross","top","right","fontSize","User","props","firstname","lastname","avatarText","onCloseClick","classes","skeleton","user","charAt","toUpperCase","_id","onClose","Paper","className","elevation","square","Typography","variant","index","Skeleton","Avatar","Button","onClick","AddUserButton","border","outline","textFilelds","form","flexDirection","button","UserModal","onSave","useState","value","valid","message","setForm","validate","setValidate","onInput","event","target","name","test","length","state","Modal","open","onSubmit","preventDefault","Object","values","every","e","TextField","size","label","required","error","helperText","type","setLoading","loading","payload","App","modalOpen","setModalOpen","users","useSelector","dispatch","useDispatch","useEffect","a","ky","get","json","console","onUserClose","userId","searchParams","id","delete","deleteUser","Container","Grid","container","Array","fill","map","_","key","item","idx","newUser","post","resUser","initialState","rootReducer","combineReducers","action","filter","u","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ThemeProvider","CssBaseline","render","document","getElementById"],"mappings":"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","file":"static/js/main.20577210.chunk.js","sourcesContent":["import { grey } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core'\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '*': {\n          boxSizing: 'border-box'\n        },\n        body: { paddingTop: '2rem' }\n      }\n    }\n  },\n  palette: {\n    text: { secondary: grey[400] }\n  }\n})\n","import { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport { deepPurple } from '@material-ui/core/colors'\n\nexport const useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      width: theme.spacing(42),\n      height: theme.spacing(11),\n      paddingRight: theme.spacing(1),\n      position: 'relative'\n    },\n    counter: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      flexBasis: theme.spacing(9),\n      flexShrink: 0,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(1)\n    },\n    avatarWrapper: {\n      flexShrink: 0,\n      margin: theme.spacing(0, 2)\n    },\n    avatar: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      backgroundColor: deepPurple[500],\n      color: theme.palette.getContrastText(deepPurple[500])\n    },\n    names: {\n      overflow: 'hidden',\n      minWidth: theme.spacing(20)\n    },\n    email: {\n      display: 'block',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    adduser: {\n      justifyContent: 'center',\n      borderWidth: 3,\n      borderStyle: 'dashed',\n      borderColor: theme.palette.text.secondary\n    },\n    cross: {\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      minWidth: 'auto',\n      padding: theme.spacing(0.8, 1.8),\n      fontSize: '1.2rem'\n    }\n  })\n})\n","import React from 'react'\nimport { Typography, Avatar, Paper, Button } from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab'\nimport { useStyles } from './userStyles'\nimport IUser from '../../interfaces/User'\n\ninterface Skelet {\n  skeleton: true\n}\n\ninterface Filled {\n  skeleton: false\n  index: number\n  user: IUser\n  onClose: (userId: string) => void\n}\n\nexport type Props = Skelet | Filled\n\nexport const User: React.FC<Props> = props => {\n  const classes = useStyles()\n\n  let firstname, lastname, email, avatarText, onCloseClick\n  if (!props.skeleton) {\n    firstname = props.user.firstname\n    lastname = props.user.lastname\n    email = props.user.email\n    avatarText = (firstname.charAt(0) + lastname.charAt(0)).toUpperCase()\n\n    onCloseClick = (): void => {\n      if (props.user._id) {\n        props.onClose(props.user._id)\n      }\n    }\n  }\n\n  return (\n    <Paper className={classes.root} elevation={3} square>\n      <div className={classes.counter}>\n        <Typography color=\"textSecondary\" variant=\"h4\">\n          {props.skeleton ? '' : `#${props.index}`}\n        </Typography>\n      </div>\n      <div className={classes.avatarWrapper}>\n        {props.skeleton ? (\n          <Skeleton variant=\"circle\">\n            <Avatar className={classes.avatar} />\n          </Skeleton>\n        ) : (\n          <Avatar className={classes.avatar}>{avatarText}</Avatar>\n        )}\n      </div>\n      <div className={classes.names}>\n        <Typography>\n          {props.skeleton ? <Skeleton /> : `${firstname} ${lastname}`}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\" className={classes.email}>\n          {props.skeleton ? <Skeleton /> : email}\n        </Typography>\n      </div>\n      {onCloseClick && (\n        <Button onClick={onCloseClick} className={classes.cross}>\n          &times;\n        </Button>\n      )}\n    </Paper>\n  )\n}\n","import React, { MouseEvent } from 'react'\nimport { useStyles } from './userStyles'\nimport { Typography, Button } from '@material-ui/core'\n\nexport interface Props {\n  onClick?: (event: MouseEvent) => void\n}\n\nexport const AddUserButton: React.FC<Props> = ({ onClick }) => {\n  const classes = useStyles()\n\n  return (\n    <Button className={classes.root + ' ' + classes.adduser} onClick={onClick}>\n      <Typography variant=\"h4\" color=\"textSecondary\">\n        +\n      </Typography>\n    </Button>\n  )\n}\n","import React, { FormEvent, useState, ChangeEvent } from 'react'\nimport {\n  Paper,\n  TextField,\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Typography,\n  Modal,\n  ModalProps\n} from '@material-ui/core'\nimport IUser from '../../interfaces/User'\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    body: {\n      padding: theme.spacing(4),\n      border: '4px solid #aaa',\n      outline: 'none'\n    },\n    textFilelds: {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: theme.spacing(40)\n    },\n    button: {\n      alignSelf: 'flex-end'\n    }\n  })\n})\n\ntype formData = 'firstname' | 'lastname' | 'email'\n\ntype formState = {\n  [prop in formData]: {\n    value: string\n    valid: boolean\n    message: string\n  }\n}\n\nexport type Props = {\n  onClose: ModalProps['onClose']\n  onSave?: (user: IUser) => void\n}\n\nexport const UserModal: React.FC<Props> = ({ onClose, onSave }) => {\n  const classes = useStyles()\n\n  const [form, setForm] = useState<formState>({\n    firstname: { value: '', valid: false, message: ' ' },\n    lastname: { value: '', valid: false, message: ' ' },\n    email: { value: '', valid: false, message: ' ' }\n  })\n  const [validate, setValidate] = useState(false)\n\n  const onInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target\n    let valid: boolean = false\n    let message: string = ' '\n    switch (name) {\n      case 'email':\n        valid = /^\\w+@\\w+\\.\\w+$/.test(value)\n        !valid && (message = 'Incorrect e-mail')\n        break\n      default:\n        valid = value.length > 2\n        !valid && (message = `please, fill ${name} 3+ characters`)\n        break\n    }\n    setForm(state => ({ ...state, [name]: { value, valid, message } }))\n  }\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setValidate(true)\n    if (onSave && Object.values(form).every(e => e.valid)) {\n      onSave({\n        firstname: form.firstname.value,\n        lastname: form.lastname.value,\n        email: form.email.value\n      })\n    }\n  }\n\n  return (\n    <Modal open={true} onClose={onClose} className={classes.root}>\n      <Paper className={classes.body}>\n        <Typography variant=\"h6\">Create user</Typography>\n        <form onSubmit={onSubmit} className={classes.form}>\n          <TextField\n            className={classes.textFilelds}\n            size=\"small\"\n            label=\"First name\"\n            variant=\"outlined\"\n            required\n            name=\"firstname\"\n            value={form.firstname.value}\n            onInput={onInput}\n            error={validate && !form.firstname.valid}\n            helperText={validate ? form.firstname.message : ' '}\n          />\n          <TextField\n            className={classes.textFilelds}\n            size=\"small\"\n            label=\"Last name\"\n            variant=\"outlined\"\n            required\n            name=\"lastname\"\n            value={form.lastname.value}\n            onInput={onInput}\n            error={validate && !form.lastname.valid}\n            helperText={validate ? form.lastname.message : ' '}\n          />\n          <TextField\n            className={classes.textFilelds}\n            size=\"small\"\n            label=\"E-mail\"\n            variant=\"outlined\"\n            required\n            name=\"email\"\n            value={form.email.value}\n            onInput={onInput}\n            error={validate && !form.email.valid}\n            helperText={validate ? form.email.message : ' '}\n          />\n          <Button\n            className={classes.button}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </form>\n      </Paper>\n    </Modal>\n  )\n}\n","import IUser from '../interfaces/User'\nimport ky from 'ky'\nimport { ThunkAction } from 'redux-thunk'\nimport { RootState, RootActions } from './rootReducer'\n\ntype AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  RootActions\n>\n\nexport function setLoading(loading: boolean): RootActions {\n  return { type: 'USERS/LOADING', payload: loading }\n}\n\nexport function fetchUsersAction(): AppThunk<void> {\n  return async dispatch => {\n    try {\n      dispatch(setLoading(true))\n      const users: IUser[] = await ky.get('/api/user').json()\n      dispatch({ type: 'USERS/FETCH', payload: users })\n      dispatch(setLoading(false))\n    } catch (err) {\n      console.error(err.message || err)\n    }\n  }\n}\n\nexport function saveNewUser(user: IUser): AppThunk {\n  return async dispatch => {\n    try {\n      const resUser: IUser = await ky\n        .post('/api/user', {\n          json: user\n        })\n        .json()\n      dispatch({ type: 'USERS/ADD', payload: resUser })\n    } catch (err) {\n      console.error(err.message || err)\n    }\n  }\n}\n\nexport function deleteUser(userId: string): AppThunk {\n  return async dispatch => {\n    try {\n      const searchParams = { id: userId }\n      await ky.delete('/api/user', { searchParams }).json()\n      dispatch({ type: 'USERS/DELETE', payload: userId })\n    } catch (err) {\n      console.error(err.message || err)\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { User } from './components/user/UserItem'\nimport { Container, Grid } from '@material-ui/core'\nimport IUser from './interfaces/User'\nimport { AddUserButton } from './components/user/AddUserButton'\nimport { UserModal } from './components/user/UserModal'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './store/rootReducer'\nimport { fetchUsersAction, saveNewUser, deleteUser } from './store/usersActions'\n\nconst App: React.FC = () => {\n  const [modalOpen, setModalOpen] = useState(false)\n  const users = useSelector<RootState, IUser[]>(state => state.users.users)\n  const loading = useSelector<RootState, boolean>(state => state.users.loading)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchUsersAction())\n  }, [])\n\n  const onSave = (newUser: IUser) => {\n    dispatch(saveNewUser(newUser))\n    setModalOpen(false)\n  }\n\n  const onUserClose = (userId: string) => {\n    dispatch(deleteUser(userId))\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        {loading\n          ? new Array(4).fill(null).map((_, key) => (\n              <Grid key={key} item>\n                <User skeleton />\n              </Grid>\n            ))\n          : users.map((user, idx) => (\n              <Grid key={user.email} item>\n                <User\n                  onClose={onUserClose}\n                  skeleton={false}\n                  user={user}\n                  index={idx + 1}\n                />\n              </Grid>\n            ))}\n        {!loading && (\n          <Grid item>\n            <AddUserButton onClick={() => setModalOpen(true)} />\n          </Grid>\n        )}\n      </Grid>\n      {modalOpen && <UserModal onClose={() => setModalOpen(false)} onSave={onSave} />}\n    </Container>\n  )\n}\n\nexport default App\n","import IUser from '../interfaces/User'\n\nconst initialState = {\n  users: [] as IUser[],\n  loading: true\n}\n\ninterface fetchUsersAction {\n  type: 'USERS/FETCH'\n  payload: IUser[]\n}\n\ninterface setLoading {\n  type: 'USERS/LOADING'\n  payload: boolean\n}\n\ninterface saveNewUser {\n  type: 'USERS/ADD'\n  payload: IUser\n}\n\ninterface deleteUser {\n  type: 'USERS/DELETE'\n  payload: string\n}\n\nexport type usersActions = fetchUsersAction | setLoading | saveNewUser | deleteUser\n\ntype usersState = typeof initialState\n\nexport function usersReducer(state = initialState, action: usersActions): usersState {\n  switch (action.type) {\n    case 'USERS/FETCH':\n      return { ...state, users: action.payload }\n    case 'USERS/LOADING':\n      return { ...state, loading: action.payload }\n    case 'USERS/ADD':\n      return { ...state, users: [...state.users, action.payload] }\n    case 'USERS/DELETE':\n      const users = state.users.filter(u => u._id !== action.payload)\n      return { ...state, users }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { usersReducer, usersActions } from './usersReducer'\n\nexport const rootReducer = combineReducers({ users: usersReducer })\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type RootActions = usersActions","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './rootReducer'\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { ThemeProvider, CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport 'fontsource-roboto'\n\nimport { theme } from './theme'\nimport App from './App'\nimport { store } from './store/store'\n\nconst app = (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>\n)\n\nrender(app, document.getElementById('app'))\n"],"sourceRoot":""}